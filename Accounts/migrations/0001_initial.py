# Generated by Django 4.2.3 on 2023-08-18 21:54

import Accounts.field_validator
import Accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("courses", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Role",
            fields=[
                ("idRole", models.BigAutoField(primary_key=True, serialize=False)),
                ("nameRole", models.CharField(max_length=255, null=True)),
            ],
            options={
                "db_table": "Role",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("idUser", models.BigAutoField(primary_key=True, serialize=False)),
                ("cin", models.CharField(max_length=255, null=True)),
                ("last_name", models.CharField(max_length=255, null=True)),
                ("ArabicLast_name", models.CharField(max_length=255, null=True)),
                (
                    "picture",
                    models.ImageField(
                        default=Accounts.models.get_default_profile_picture,
                        null=True,
                        upload_to="profile_pictures/%y/%m/%d/",
                    ),
                ),
                ("first_name", models.CharField(max_length=255, null=True)),
                ("ArabicFirst_name", models.CharField(max_length=255, null=True)),
                (
                    "phone",
                    models.CharField(
                        max_length=15,
                        validators=[Accounts.field_validator.validate_phone_number],
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="customuser_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="customuser_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
                "managed": True,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                ("cne", models.CharField(max_length=255, null=True)),
                ("dateNaissance", models.DateTimeField(null=True)),
                ("idEtudiant", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "User",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Student",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Student",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Professor",
            fields=[
                ("specialite", models.CharField(max_length=255, null=True)),
                (
                    "idEnseignant",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Professor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Professor",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="ModifEtudiantHistori",
            fields=[
                ("idModif", models.BigAutoField(primary_key=True, serialize=False)),
                ("last_name", models.CharField(max_length=255, null=True)),
                ("first_name", models.CharField(max_length=255, null=True)),
                ("cne", models.CharField(max_length=255, null=True)),
                (
                    "idStudent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "modifetudianthistori",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="CadreAdministrateur",
            fields=[
                ("grade", models.CharField(max_length=255)),
                (
                    "idCardreAdmin",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                (
                    "User",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cadre_administrateur",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "cadreadministrateur",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                ("idAccount", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "accepteDemandeAutorisationAbsence",
                    models.BooleanField(default=False),
                ),
                ("accountNonExpired", models.BooleanField(default=False)),
                ("accountNonLocked", models.BooleanField(default=False)),
                ("afficheEmail", models.BooleanField(default=True)),
                ("affichePicture", models.BooleanField(default=True)),
                ("credentialsNonExpired", models.BooleanField(default=True)),
                ("disconnectAccount", models.BooleanField(default=True)),
                ("enabled", models.BooleanField(default=False)),
                (
                    "login",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        validators=[Accounts.field_validator.validate_username],
                    ),
                ),
                ("password", models.CharField(max_length=255, null=True)),
                (
                    "idRole",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Accounts.role",
                    ),
                ),
                (
                    "idUser",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Account",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="CoordinatorFiliere",
            fields=[
                (
                    "idCoordinator",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="Accounts.professor",
                    ),
                ),
                (
                    "filiereId",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.filiere",
                    ),
                ),
            ],
            options={
                "db_table": "coordinatorfiliere",
                "managed": True,
            },
        ),
    ]
